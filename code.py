menu = """
======================================
[d]üè¶ Depositar
[s]üí∏ Sacar
[e]üìú Extrato
[u]üë§ Criar Usu√°rio
[c]üîí Criar Conta Corrente
[q]‚ùå Sair
======================================
=> """

saldo = 0
extrato = []
limite = 500
numero_saques = 0
LIMITE_SAQUES = 3
usuarios = []
contas_corrente = []
numero_conta = 1

def deposito(valor):
    global saldo
    print("üè¶========= Dep√≥sito =========üè¶")
    extrato.append(str(valor))
    saldo += valor

def saque(*, saldo, numero_saques):
    global LIMITE_SAQUES
    print("üí∏========= Saque =========üí∏")
    saque_valor = float(input("Qual √© o valor que deseja sacar?\n=>"))
    if saldo >= saque_valor > 0:
        numero_saques += 1
        if numero_saques > LIMITE_SAQUES:
            print("Uso di√°rio atingido! Retorne amanh√£.")
        else:
            extrato.append(str(-saque_valor))
            saldo -= saque_valor
    else:
        print("Valor de saque inv√°lido ou saldo insuficiente.")
    return saldo, numero_saques

def mostrar_extrato(saldo, *, numero_saques=0):
    print("üìú========= Extrato =========üìú")
    if len(extrato) == 0:
        print("Nenhuma opera√ß√£o realizada ainda.")
    else:
        print(extrato)
    print(f"Saldo: R${saldo:.2f}")

def criar_usuario():
    print("üë§========= Criar Usu√°rio =========üë§")
    opcao = input("Escolha uma op√ß√£o:\n[v] Verificar usu√°rios existentes\n[c] Criar novo usu√°rio\n=> ")

    if opcao.lower() == "v":
        if usuarios:
            print("Usu√°rios existentes:")
            for usuario in usuarios:
                print(f"Nome: {usuario['nome']}, CPF: {'*' * 9 + usuario['cpf'][-3:]}")
        else:
            print("N√£o h√° usu√°rios existentes.")
    elif opcao.lower() == "c":
        nome = input("Nome do usu√°rio: ")
        data_nascimento = input("Data de nascimento (dd/mm/aaaa): ")
        cpf = input("CPF do usu√°rio: ")

        for usuario in usuarios:
            if usuario["cpf"] == cpf:
                print("CPF j√° cadastrado. Um usu√°rio com este CPF j√° existe.")
                return

        endereco = input("Endere√ßo (logradouro, nro - bairro - cidade/estado): ")

        novo_usuario = {"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco}
        usuarios.append(novo_usuario)
        print("Usu√°rio criado com sucesso!")

def criar_conta_corrente():
    global numero_conta
    print("üîí========= Criar Conta Corrente =========üîí")
    opcao = input("Escolha uma op√ß√£o:\n[v] Verificar contas existentes\n[c] Criar nova conta\n=> ")

    if opcao.lower() == "v":
        if contas_corrente:
            print("Contas existentes:")
            for conta in contas_corrente:
                print(f"N√∫mero da conta: {conta['numero_conta']}, CPF do titular: {'*' * 9 + conta['usuario']['cpf'][-3:]}")
        else:
            print("N√£o h√° contas existentes.")
    elif opcao.lower() == "c":
        cpf = input("CPF do titular da conta: ")

        titular_encontrado = None
        for usuario in usuarios:
            if usuario["cpf"] == cpf:
                titular_encontrado = usuario
                break
        else:
            print("Usu√°rio com este CPF n√£o encontrado.")
            return

        nova_conta_corrente = {"agencia": "0001", "numero_conta": numero_conta, "usuario": titular_encontrado}
        contas_corrente.append(nova_conta_corrente)
        numero_conta += 1
        print(f"Conta corrente criada com sucesso! N√∫mero da conta: {nova_conta_corrente['numero_conta']}")

while True:
    opcao = input(menu)
    if opcao.lower() == "d":
        deposito_valor = float(input("Qual √© o valor do dep√≥sito?\n=>"))
        deposito(deposito_valor)
    
    elif opcao.lower() == "s":
        saldo, numero_saques = saque(saldo=saldo, numero_saques=numero_saques)
    
    elif opcao.lower() == "e":
        mostrar_extrato(saldo, numero_saques=numero_saques)

    elif opcao.lower() == "u":
        criar_usuario()
    
    elif opcao.lower() == "c":
        criar_conta_corrente()

    elif opcao.lower() == "q":
        break
    else:
        print("Opera√ß√£o inv√°lida! Por favor, selecione outra")
